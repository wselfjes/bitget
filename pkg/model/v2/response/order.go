package response

import (
	"github.com/yasseldg/bitget/pkg/model"
	"github.com/yasseldg/bitget/pkg/model/common"
)

type OrderResp struct {
	model.BaseResp `json:",inline"`
	Data           Order `json:"data"`
}

type OrdersResp struct {
	model.BaseResp `json:",inline"`
	Data           OrdersData `json:"data"`
}

type OrdersData struct {
	EntrustedList []Order `json:"entrustedList"`
	EndId         string  `json:"endId"`
}

type Order struct {
	common.Order `json:",inline"`

	BaseVolume   string `json:"baseVolume"`
	Fee          string `json:"fee"`
	TotalProfits string `json:"totalProfits"`
	QuoteVolume  string `json:"quoteVolume"`
}

// {
//     "code": "00000",
//     "data": {
//         "entrustedList": [
//             {
//                 "symbol": "ethusdt",
//                 "size": "100",
//                 "orderId": "123",
//                 "clientOid": "12321",
//                 "baseVolume": "12.1",
//                 "fee": "",
//                 "price": "1900",
//                 "priceAvg": "1903",
//                 "status": "partially_filled",
//                 "side": "buy",
//                 "force": "gtc",
//                 "totalProfits": "0",
//                 "posSide": "long",
//                 "marginCoin": "usdt",
//                 "quoteVolume": "22001.21",
//                 "leverage": "20",
//                 "marginMode": "cross",
//                 "enterPointSource": "api",
//                 "tradeSide": "open",
//                 "posMode": "hedge_mode",
//                 "orderType": "limit",
//                 "orderSource": "normal",
//                 "cTime": "1627293504612",
//                 "uTime": "1627293505612",
//                 "presetStopSurplusPrice": "2001",
//                 "presetStopLossPrice": "1800"
//             }
//         ],
//         "endId": "123"
//     },
//     "msg": "success",
//     "requestTime": 1627293504612
// }

// >reduceOnly	String	Whether or not to just reduce the position.
// >enterPointSource	String	Order source
// WEB: Orders created on the website
// API: Orders created on API
// SYS: System managed orders, usually generated by forced liquidation logic
// ANDROID: Orders created on the Android app
// IOS: Orders created on the iOS app
// >tradeSide	String	Direction
// open (open and close mode)
// close (open and close mode)
// reduce_close_long
// Liquidate partial long positions
// reduce_close_short
// Liquidate partial short positions
// offset_close_long
// Liquidate partial long positions for netting
// offset_close_short
// Liquidate partial short positions for netting
// burst_close_long
// Liquidate long positions
// burst_close_short
// Liquidate short positions
// delivery_close_long
// Long position delivery
// delivery_close_short
// Short position delivery
// >posMode	String	Position mode
// one_way_mode: one-way position
// hedge_mode: two-way position
// >orderType	String	Order type
// limit: limit order
// market: market order
// >orderSource	String	Order sources
// normal: Normal order
// market: market order
// profit_market: Market TP order
// loss_market: Market SL order
// Trader_delegate: Elite trade order
// trader_profit: Trader takes profit
// trader_loss: Trader stops loss
// reverse: Reversed orders
// trader_reverse: Reversed elite trades
// profit_limit: Take-profit limit order
// loss_limit: Stop-loss limit order
// liquidation: Liquidation order
// delivery_close_long: close long positions
// delivery_close_short: close short positions
// pos_profit_limit: Position take-profit limit order
// pos_profit_market: Position take-profit market order
// pos_loss_limit: Position stop-loss limit order
// pos_loss_market: Position stop-loss market order
// >cTime	String	Creation time
// >uTime	String	Last updated
// >presetStopSurplusPrice	String	Set TP
// >presetStopLossPrice	String	Set SL
// endId	String	The final order ID.
// This is used when idLessThan/idGreaterThan is set as a range.
